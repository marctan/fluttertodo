// Mocks generated by Mockito 5.0.17 from annotations
// in fluttertodo/test/todo_localdatasource_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:fluttertodo/data/datasources/datasources.dart' as _i2;
import 'package:fluttertodo/data/models/todo.dart' as _i4;
import 'package:fluttertodo/util/constants.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [TodoLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoLocalDataSource extends _i1.Mock
    implements _i2.TodoLocalDataSource {
  MockTodoLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<int> addItem(String? title, String? description) =>
      (super.noSuchMethod(Invocation.method(#addItem, [title, description]),
          returnValue: Future<int>.value(0)) as _i3.Future<int>);
  @override
  _i3.Future<List<_i4.Todo>> queryAllItem() =>
      (super.noSuchMethod(Invocation.method(#queryAllItem, []),
              returnValue: Future<List<_i4.Todo>>.value(<_i4.Todo>[]))
          as _i3.Future<List<_i4.Todo>>);
  @override
  _i3.Future<void> updateItem(String? title, String? description, int? id) =>
      (super.noSuchMethod(
          Invocation.method(#updateItem, [title, description, id]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> deleteItem(int? id) =>
      (super.noSuchMethod(Invocation.method(#deleteItem, [id]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<List<_i4.Todo>> queryByStatus(_i5.StatusVal? val) =>
      (super.noSuchMethod(Invocation.method(#queryByStatus, [val]),
              returnValue: Future<List<_i4.Todo>>.value(<_i4.Todo>[]))
          as _i3.Future<List<_i4.Todo>>);
  @override
  _i3.Future<void> updateItemStatus(int? id, _i5.StatusVal? val) =>
      (super.noSuchMethod(Invocation.method(#updateItemStatus, [id, val]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
}
